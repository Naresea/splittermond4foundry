/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type AttributeShortname =
  | "AUS"
  | "BEW"
  | "INT"
  | "KON"
  | "MYS"
  | "STÃ„"
  | "VER"
  | "WIL"
  | "SPL"
  | "GK"
  | "GSW"
  | "INI"
  | "LP"
  | "FO"
  | "VTD"
  | "SR"
  | "GW"
  | "KW";
export type AttributeShortnameOptional = AttributeShortname | null;
export type WeaponBase = ItemBase & {
  name?: string;
  skill?: string;
  attribute1?: AttributeShortname;
  attribute2?: AttributeShortname;
  attribute1Id?: string;
  attribute2Id?: string;
  value?: number;
  damage?: string;
  weaponSpeed?: number;
  characterTickMalus?: number;
  calculateSpeed?: number;
  features?: ItemFeature[];
  [k: string]: unknown;
};

export interface GenesisSchema {
  jsonExporterVersion?: string;
  system?: string;
  name?: string;
  race?: string;
  culture?: string;
  background?: string;
  birthplace?: string | null;
  education?: string;
  cultureLores?: string[];
  languages?: string[];
  moonSign?: {
    name?: string;
    description?: string | null;
    [k: string]: unknown;
  };
  freeExp?: number;
  investedExp?: number;
  hairColor?: string | null;
  eyeColor?: string | null;
  furColor?: string | null;
  size?: number | null;
  weight?: number | null;
  deity?: string | null;
  gender?: string | null;
  weaknesses?: string[];
  attributes?: {
    name?: string;
    id?: string;
    shortName?: AttributeShortname;
    startValue?: number;
    value?: number;
    [k: string]: unknown;
  }[];
  skills?: {
    name?: string;
    id?: string;
    attribute1?: AttributeShortnameOptional;
    attribute2?: AttributeShortnameOptional;
    value?: number;
    points?: number;
    modifier?: number;
    masterships?: {
      name?: string;
      id?: string;
      level?: number;
      shortDescription?: string | null;
      longDescription?: string | null;
      page?: string | null;
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  }[];
  powers?: {
    name?: string;
    id?: string;
    count?: number;
    shortDescription?: string | null;
    longDescription?: string | null;
    page?: string | null;
    [k: string]: unknown;
  }[];
  resources?: {
    name?: string;
    value?: number;
    description?: string | null;
    [k: string]: unknown;
  }[];
  spells?: {
    name?: string;
    id?: string;
    value?: number;
    school?: string;
    schoolGrade?: number;
    difficulty?: string;
    focus?: string;
    castDuration?: string;
    castRange?: string;
    spellDuration?: string;
    enhancement?: string;
    page?: string | null;
    longDescription?: string | null;
    enhancementDescription?: string | null;
    enhancementOptions?: string | null;
    [k: string]: unknown;
  }[];
  armors?: (ItemBase & {
    name?: string;
    defense?: number;
    damageReduction?: number;
    handicap?: number;
    tickMalus?: number;
    features?: ItemFeature[];
    [k: string]: unknown;
  })[];
  shields?: (ItemBase & {
    name?: string;
    activeDefenseValue?: number;
    skill?: string;
    attack?: number;
    damage?: string;
    defensePlus?: number;
    handicap?: number;
    tickMalus?: number;
    features?: ItemFeature[];
    [k: string]: unknown;
  })[];
  meleeWeapons?: WeaponBase[];
  longRangeWeapons?: (WeaponBase & {
    range?: number;
    [k: string]: unknown;
  })[];
  items?: (ItemBase & {
    name?: string;
    count?: number;
    [k: string]: unknown;
  })[];
  notes?: string | null;
  [k: string]: unknown;
}
export interface ItemBase {
  relic?: boolean;
  personalized?: boolean;
  [k: string]: unknown;
}
export interface ItemFeature {
  name?: string;
  level?: number;
  description?: string | null;
  page?: string | null;
  [k: string]: unknown;
}
